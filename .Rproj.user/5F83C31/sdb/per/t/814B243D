{
    "contents" : "getwd()\n\n# 1) Import subject_train. Each row identifies the subject who performed the activity for each window sample. Range 1:30 but excluded few cases, contained in subject_text.txt. Import it in the \"test\" merging session. in cul ti e ci t'ha cag√†. \n\nsubject_train <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train\", \"subject_train.txt\"), header = TRUE)\n\n# 2) Import X_train. Training set.\n\nX_train <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train\", \"X_train.txt\"), header = TRUE)\n\n# 3) Import y_train. Training labels. \n\ny_train <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train\", \"y_train.txt\"), header = TRUE)\n\n# 4) Dimensional exploration of data imported in 1, 2 and 3.\n\ndim(subject_train)\ndim(X_train)\ndim(y_train)\nlevels(subject_train)\nlevels(X_train)\nlevels(y_train)\nnames(subject_train)\nnames(X_train)\nnames(y_train)\n\n# 5) Merge 1) subject-train and 3) y_train via column binding because they are both n*1 vectors.\n\njoin_train_1 <- cbind(subject_train, y_train)\ntail(join_train_1)\ndim(join_train_1)\nobject.size(join_train_1)\n\n# 5.1) Remove subject_train and y_train to save memory\nrm(list = \"subject_train\", \"y_train\")\ngc()\n\n# 6) Merge join_train_1 from 5) with X_train from 6).\n\ndim(X_train)\n\njoin_train_2 <- cbind(join_train_1, X_train)\nrm(list = \"join_train_1\", \"X_train\")\n\n# 7) Import subject_test. Each row identifies the subject who performed the activity for each window sample. Range 1:30\n\nsubject_test <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test\", \"subject_test.txt\"), header = TRUE)\nobject.size(subject_test)\ndim(join_train_2)\n\n# 8) Import X_test. Training set.\n\nX_test <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test\", \"X_test.txt\"), header = TRUE)\nobject.size(X_test)\n\n# 9) Import y_test. Training labels. \ny_test <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test\", \"y_test.txt\"), header = TRUE)\n\n# 10) Dimensional exploration 7, 8 and 9.\nsapply(c(subject_test, X_test, y_test), dim)\ndim(subject_test)\ndim(X_test)\ndim(y_test)\n\n# 11) Cbinding subject_test, X_test, y_test plus deletion\njoin_test_2 <- cbind(subject_test, y_test, X_test)\njoin_test_2\ndim(join_test_2)\nrm(list = \"X_test\", \"y_test\", \"subject_test\")\n\n# 12) Step 3  of the Programmin Assignment. Labelling activities in join_train_2$5 and join_test_2$X5\n\njoin_train_2$X5 <- factor(join_train_2$X5, levels = c(1:6), labels = c( \"walking\", \"walking_upstair\", \"walking_downstairs\", \"sitting\", \"standing\", \"laying\"))\n\njoin_test_2$X5 <- factor(join_test_2$X5, levels = c(1:6), labels = c( \"walking\", \"walking_upstair\", \"walking_downstairs\", \"sitting\", \"standing\", \"laying\"))\n\n# 14) Step 4 of the Programming Assignment. Labelling every column of join_test_2 and join_train_2 with descriptive variable names.\n\nvar_names <- read.table(file = file.path(\"C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset\", \"features.txt\"), header = FALSE)\n\nvar_names <- subset(var_names, select = -V1)\nnew_rows <- data.frame(V2 = c(\"subject\", \"activity\"))\nvar_names <- rbind(new_rows, var_names)\nas.data.frame(var_names)\ncolnames(join_test_2) <- var_names$V2\ncolnames(join_train_2) <- var_names$V2\n\n# 15) remove var_names and new_rows\n\nrm(list = \"var_names\", \"new_rows\")\n\n# 16) Step 1 of the Programming Assignment. Extracts only the measurements on the mean and standard deviation for each measurement. Now i have two tidy and pretty datasets of 2946*563(join_test_2) and of 7351*563 (join_train_2), composed by the \"training\" and the \"test\" sets. Operate rbind to merge them and order() to sort them. \n\ntest_train1 <- rbind(join_train_2, join_test_2)\ntest_train1 <- test_train1[order(test_train1$subject, test_train1$activity),]\ndim(test_train)\n\n# 15) Clean workspace exept for the merged dataset of 14).\n\nrm(list=setdiff(ls(), \"test_train1\"))\n\n# 16) Step 2 of the Assignment project. Extracts only the measurements on the mean and standard deviation for each measurement. \n\ntest_train1 <- test_train1[grep(\"subject|activity|mean|std\", colnames(test_train1), value = TRUE)]\ndim(test_train1)\n\n# 17) From the data set in step 4 (in this script is the dataset \n# in step 16) ), creates a second, independent tidy data set with the average of each variable for each activity and each subject.\n\nprog_ass <- aggregate(test_train1[, 3:81], list(test_train1$activity, test_train1$subject), mean)\n\nrm(test_train1)\n\n# 18) finished! \n\nq()\n",
    "created" : 1445516008837.000,
    "dirty" : false,
    "encoding" : "UTF-8",
    "folds" : "",
    "hash" : "647903534",
    "id" : "814B243D",
    "lastKnownWriteTime" : 1445596204,
    "path" : "~/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/run_analysis.R",
    "project_path" : "run_analysis.R",
    "properties" : {
    },
    "relative_order" : 1,
    "source_on_save" : false,
    "type" : "r_source"
}