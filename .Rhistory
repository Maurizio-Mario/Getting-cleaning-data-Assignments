??fread
DT <- read.csv("getdata%2Fdata%2Fss06pid.csv")
rm(Q3_data)
library(data.table)
?fread
DT <- fread("getdata%2Fdata%2Fss06pid.csv")
DT
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time()
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
Q3_down <- download.file("https://d396qusza40orc.cloudfront.net/getdata%2Fdata%2Fss06pid.csv", "getdata%2Fdata%2Fss06pid.csv")
DT <- fread("getdata%2Fdata%2Fss06pid.csv")
system.time(tapply(DT$pwgtp15,DT$SEX,mean))
system.time(DT[,mean(pwgtp15),by=SEX])
system.time(replicate(10000(tapply(DT$pwgtp15,DT$SEX,mean)))
system.time(replicate(10000(tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(10000, (tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(1000, (tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]))
system.time(rowMeans(DT)[DT$SEX==1]; rowMeans(DT)[DT$SEX==2])
system.time(sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(mean(DT[DT$SEX==1,]$pwgtp15); mean(DT[DT$SEX==2,]$pwgtp15))
system.time(mean(DT$pwgtp15,by=DT$SEX))
system.time(replicate(1000, (tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(1000, sapply(split(DT$pwgtp15,DT$SEX),mean))
system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX))
system.time(replicate(1000, (tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(1000, sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX))
system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX)))
mean(DT$pwgtp15,by=DT$SEX)
system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX)))
system.time(replicate(1000, (tapply(DT$pwgtp15,DT$SEX,mean))))
system.time(replicate(1000, DT[,mean(pwgtp15),by=SEX]))
system.time(replicate(1000, sapply(split(DT$pwgtp15,DT$SEX),mean)))
system.time(replicate(1000, mean(DT$pwgtp15,by=DT$SEX)))
library(XML)
fileUrl <- "http://class.coursera.org/getdata-033/lecture"
dataXml <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "https://class.coursera.org/getdata-033/lecture"
dataXml <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
fileUrl <- "http://class.coursera.org/getdata-033/lecture"
dataXml <- xmlTreeParse(fileUrl, useInternalNodes = TRUE)
dataXml <- xmlTreeParse(fileUrl)
?xmlTreeParse
dataXml <- xmlTreeParse(fileUrl, useInternalNodes = TRUE,
isURL = TRUE)
fileUrl2 <- "http://hr.fbk.eu/en/jobs"
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE,
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE,isURL = TRUE)
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE,isURL = TRUE)
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE)
fileUrl2 <- "https://hr.fbk.eu/en/jobs"
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE)
fileUrl2 <- "http://hr.fbk.eu/en/jobs"
dataXml <- xmlTreeParse(fileUrl2, useInternalNodes = TRUE)
dataXml <- xmlTreeParse(fileUrl2, useInternal = TRUE)
rm(list = ls())
search("Rtools)
search("Rtools")
search(Rtools)
search()
install.packages("RTools")
install.packages('RMySQL',type='source')
library(RMySQL)
ucscDb <- dbConnect(MySQL(), user="genome",
host = "genome-mysql.cse.ucsc.edu")
result <- dbGetQuery(ucscDb, "show database"); dbDisconnect(ucscDb);
result <- dbGetQuery(ucscDb, "show databases;"); dbDisconnect(ucscDb);
result
head(result)
allTables <- dbListTables(hg19)
hg19 <- dbConnect(MySQL(), user = "genome", db = "gh19",
host = "genome-mysql.cse.ucsc.edu")
hg19 <- dbConnect(MySQL(), user = "genome", db = "hg19",
host = "genome-mysql.cse.ucsc.edu")
allTables <- dbListTables(hg19)
length(allTables)
allTables[1:5]
dbListFields(hg19, "affyU133Plus2")
dbGetQuery(hg19, "select count(*) from affyU133Plus2")
affyData z- dbReadTable(hg19, "affyU133Plus2")
affyData <- dbReadTable(hg19, "affyU133Plus2")
head(affyData)
query <- dbSendQuery((hg19, "select * from affyU133Plus2 where
misMatches between 1 and 3"))
query <- dbSendQuery(hg19, "select * from affyU133Plus2 where
misMatches between 1 and 3")
affyMis <- fetch((query); quantile(affyMis$misMatches))
affyMis <- fetch(query); quantile(affyMis$misMatches)
affyMisSmall <- fetch(query, n = 10); dbClearResult(query);
dim(affyMis)
dim(affyMisSmall)
dbDisconnect(hg19)
source("http://bioconductor.org/biocLite.R")
biocLite("rhdf5")
library(rhdf5)
search()
library(rhdf5)
search()
install.packages("httr")
library(swirl)
install_from_swirl("Getting and Cleaning Data")
swirl()
rm(list = ls())
swirl()
read.csv("path2csv", stringsAsFactors = TRUE)
read.csv(path2csv, stringsAsFactors = TRUE)
read.csv(path2csv, stringsAsFactors = FALSE)
mydf <- read.csv(path2csv, stringsAsFactors = FALSE)
dim(mydf)
head(mydf)
library(dplyr)
package_version("dplyr")
packageVersion("dplyr")
cran <- tbl_df(mydf)
rm("mydf")
cran
?select
select(cran, ip_id, package, country)
5:20
select(cran, r_arch : country)
select(cran, country : r_arch)
cran
select(cran, -time)
-5:20
-5:-20
-(5:20)
select(-(x:size))
select-(x:size)
select(cran, -(x:size))
select(cran, (x:size))
select(cran, x:size)
select(cran)
select(cran, -(X:size))
filter(cran, package == "swirl")
filter(cran, r_version == "3.1.1", country == "US")
?Comparison
filter(cran, country == "IN", r_version =< "3.0.2")
filter(cran, country == "IN", r_version <= "3.0.2")
filter(cran, country == "US" | country == "IN")
filter(cran, size > 100500)
filter(cran, size > 100500, r_os == "linus-gnu")
filter(cran, size > 100500, r_os == "linux-gnu")
is.na((c(3, 5, NA, 10)))
is.na(c(3, 5, NA, 10))
!is.na(c(3, 5, NA, 10))
filter(cran, !is.na(r_version))
cran2 <- select(size : ip_id)
cran2 <- select(cran, size : ip_id)
arrange(cran2, ip_id)
arrange(cran2, desc(ip_id))
arrange(cran2, package, ip_id)
arrange(cran2, package, desc ip_id)
arrange(cran2, package, desc(r_version) ip_id)
arrange(cran2, package, desc(r_version), ip_id)
arrange(cran2, country, desc(r_version), ip_id)
cran3 <- select(cran, ip_id, package, size)
cran3
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_gb = size_mb / 2^10)
mutate(cran3, size_gb)
mutate(cran3, size_mb)
size_mb
mutate(cran3, size_mb = size / 2^20)
mutate(cran3, size_mb = size / 2^20, size_gb = size_mb / 2^10)
mutate(cran3, correct_size = size + 1000)
summarize(cran, avg_bytes = mean(size))
dir()
getwd()
setwd(".//R programming")
setwd("./R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming", setwd("./R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming"), setwd("./R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming"), setwd("../R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming"), setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming"), setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming")
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming")
getwd()
dir()
subject_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "subject_train.txt"), header = TRUE)
X_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "X_train.txt"), header = TRUE)
y_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "y_train.txt"), header = TRUE)
join_train_1 <- cbind(subject_train, y_train)
X_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "X_train.txt"), header = TRUE)
memory.limit()
rm(list = ls())
subject_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "subject_train.txt"), header = TRUE)
X_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "X_train.txt"), header = TRUE)
y_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "y_train.txt"), header = TRUE)
join_train_1 <- cbind(subject_train, y_train)
memory.limit()
memory.limit(size = 12058)
join_train_2 <- merge(join_train_1, X_train, all = TRUE)
dim(join_train_1)
dim(X_train)
join_train_2 <- cbind(join_train_1, X_train)
dim(join_train_2)
str(join_train_2)
head(join_train_2)
names(join_train_2)
exit()
q
q()
rm(list = ls())
install.packages("HTTR")
install.packages("httr")
library(httr)
rm(list = ls())
getwd()
rm(list = ls())
getwd()
setwd("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/R programming")
dir()
# 1) Import subject_train. Each row identifies the subject who performed the activity for each window sample. Range 1:30
subject_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "subject_train.txt"), header = TRUE)
object.size(subject_train)
# 2) Import X_train. Training set.
X_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "X_train.txt"), header = TRUE)
object.size(X_train)
?object.size
# 3) Import y_train. Training labels.
y_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/train", "y_train.txt"), header = TRUE)
object.size(y_train)
# 4) Dimensional exploration of data importen in 1, 2 and 3.
dim(subject_train)
dim(X_train)
dim(y_train)
levels(subject_train)
levels(X_train)
levels(y_train)
names(subject_train)
names(X_train)
names(y_train)
# 5) Merge 1) subject-train and 3) y_train via column binding because they are both n*1 vectors.
join_train_1 <- cbind(subject_train, y_train)
tail(join_train_1)
dim(join_train_1)
object.size(join_train_1)
# 5.1) Remove subject_train and y_train to save memory
rm(list = "subject_train", "y_train")
gc()
# 6) Merge join_train_1 from 5) with X_train from 6).
dim(X_train)
join_train_2 <- cbind(join_train_1, X_train)
memory.limit(size = 12058)
dim(join_train_2)
str(join_train_2)
head(join_train_2)
names(join_train_2)
# 7) Import subject_test. Each row identifies the subject who performed the activity for each window sample. Range 1:30
subject_train <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test", "subject_test.txt"), header = TRUE)
object.size(subject_train)
dim()
dim(subject_train)
rm(list = "subject_train", "y_train")
rm(list = "join_train1", "X_train")
rm(list = "join_train_1", "X_train")
subject_test <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test", "subject_test.txt"), header = TRUE)
object.size(subject_test)
dim(subject_test)
dim(join_train_2)
X_test <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test", "X_test.txt"), header = TRUE)
y_test <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset/test", "y_test.txt"), header = TRUE)
sapply("subject_test", dim)
apply("subject_test", dim)
sapply("subject_test", dim)
sapply("subject_test", "X_test", dim)
sapply(c("subject_test", "X_test"), dim)
sapply(c("subject_test", "X_test", "y_test"), dim)
dim("subject_test")
dim(subject_test)
sapply(c(subject_test", "X_test", "y_test"), dim)
sapply(c(subject_test, "X_test", "y_test"), dim)
sapply(c(subject_test, X_test, y_test), dim)
dim(c(subject_test, X_test, y_test))
dim(c(subject_test, X_test, y_test))
dim(subject_test)
dim(X_test)
dim(y_test)
join_test_2 <- cbind(subject_test, X_test, y_test)
join_test_2
dim(join_test_2)
dim(join_test_1)
dim(join_train_2)
View(join_test_2)
dim(join_test_2)
test_train_merge <- rbind(join_train_2, join_test_2)
test_train_merge <- rbind(join_train_2, join_test_2)
?rbind
rm(list = X_test, y_test)
rm(list = (X_test, y_test))
rm(list = "X_test", "y_test")
test_train <- rbind(join_train_2, join_train_2)
dim(test_train)
dim(test_train)
str(test_train)
str(head(test_train))
str(head(test_train, 1))
summary(test_train$X5)
levels(test_train$X5)
class(test_train$X5)
test_train$X5 <- list(walking = 1, walking_upstair = 2, Walking_downstairs = 3, sitting = 4, standing = 5, laying = 6)
summary(test_train$X5)
test_train$X5 <- list(1 = walking, 2 = walking_upstair , 3 = Walking_downstairs, 4 = sitting, 5 = standing, 6 = laying)
names(test_train$X5) <- list(walking = 1, walking_upstair = 2, Walking_downstairs = 3, sitting = 4, standing = 5, laying = 6)
summary(test_train$X5)
str(head(test_train, 1))
names(test_train$X5)
levels(test_train$X5)
test_train$X5 <- factor(test_train$X5, levels = c(1:6), labels = c( "walking", "walking_upstair", "Walking_downstairs", "sitting", "standing", "laying"))
levels(test_train$X5)
summary(test_train$X5)
str(head(test_train, 1))
dim(test_train)
colnames(test_train)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features"), header = TRUE)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = TRUE)
dim(var_names)
head(var_names)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
dim(var_names)
head(var_names)
tail(var_names)
rm(var_names$V1)
dim(var_names)
?rm
example(rm)
rm(list(var_names$V1))
rm("var_names$V1")
rm(var_names$V1)
var_names <- submit(var_names, select = -V1)
var_names <- subset(var_names, select = -V1)
dim(var_names)
tail(var_names)
head(var_names)
class(var_names)
class(var_names[1])
as.list(var_names)
head(var_names)
x1x5_names <- as.list(c("subject", "activity" ))
x1x5_names
var_names <- sum(x1x5_names + var_names)
var_names <- sum("x1x5_names" + "var_names")
var_names <- paste("x1x5_names" + "var_names")
var_names <- cbind("x1x5_names" + "var_names")
var_names <- cbind(x1x5_names, var_names)
dim(var_names)
head(var_names)
var_names <- subset(var_names, select = -V1)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- subset(var_names, select = -V1)
dim(var_names)
head(var_names)
x1x5_names <- as.list(c("subject", "activity" ))
x1x5_names
head(var_names)
rm(var_names)
rm(x1x5_names)
var_names <- subset(var_names, select = -V1)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- subset(var_names, select = -V1)
class(var_names)
dim(var_names)
head(var_names)
new_rows <- data.frame(V2 = c("subject", "activity"))
dim(new_rows)
dim(var_names)
var_names <- rbind(new_rows, var_names)
head(var_names)
colnames(test_train) <- var_names
head(test_train)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- as.character(rbind(new_rows, var_names))
var_names <- rbind(new_rows, var_names)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- subset(var_names, select = -V1)
new_rows <- data.frame(V2 = c("subject", "activity"))
var_names <- rbind(new_rows, var_names)
var_names <- as.list.data.frame(var_names)
var_names <- as.character(var_names)
var_names <- as.data.frame(var_names)
View(var_names)
var_names <- subset(var_names, select = -V1)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- subset(var_names, select = -V1)
var_names <- rbind(new_rows, var_names)
var_names
class(var_names)
test_train2 <- colnames(test_train) <- var_names
head(test_train)
as.list(var_names)
test_train2 <- colnames(test_train) <- var_names
head(test_train2)
dim(test_train2)
dim(test_train)
as.character(var_names)
as.data.frame(var_names)
test_train2 <- colnames(test_train) <- var_names
head(test_train2)
colnames(test_train2) <- var_names
head(test_train2)
dim(test_train2)
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
head(test_train)
dim(test_train)
var_names <- subset(var_names, select = -V1)
new_rows <- data.frame(V2 = c("subject", "activity"))
var_names <- rbind(new_rows, var_names)
as.data.frame(var_names)
class(var_names)
colnames(test_train2) <- var_names$V2
dim(var_names)
test_train2 <- test_train
dim(test_train2)
colnames(test_train2) <- var_names$V2
head(test_train2)
dim(test_train2)
View(test_train2)
View(test_train2)
library(swirl)
rm(llist = ls())
rm(list = ls())
test_train <- rbind(join_train_2, join_train_2)
dim(test_train)
str(head(test_train, 1))
summary(test_train$X5)
test_train$X5 <- factor(test_train$X5, levels = c(1:6), labels = c( "walking", "walking_upstair", "Walking_downstairs", "sitting", "standing", "laying"))
var_names <- read.table(file = file.path("C:/Users/MaurizioLocale/OneDrive/Data_Science/3 Getting and Cleaning Data/Getting-cleaning-data-Assignments/UCI HAR Dataset", "features.txt"), header = FALSE)
var_names <- subset(var_names, select = -V1)
new_rows <- data.frame(V2 = c("subject", "activity"))
var_names <- rbind(new_rows, var_names)
as.data.frame(var_names)
test_train2 <- test_train
colnames(test_train2) <- var_names$V2
head(test_train2)
names(test_train2)
rm(list = ( -test_train2))
rm(list = ( -"test_train2"))
rm(list=setdiff(ls(), "test_train2"))
grep("[a -z]", letters)
grep("[a-z]", letters)
txt <- c("arm","foot","lefroo", "bafoobar")
if(length(i <- grep("foo", txt)))
cat("'foo' appears at least once in\n\t", txt, "\n")
i # 2 and 4
txt[i]
rm(txt)
rm(i)
library(swirl)
swirl()
swirl()
grep(c("mean", "std"), test_train2)
grep(c("mean", "std"), test_train2)
grep("mean", test_train2)
grep("mean", test_train2, value = TRUE)
grep("mean", colnames(test_train2), value = TRUE)
grep(c("mean", "std"), colnames(test_train2), value = TRUE)
grep("mean" | "std"), colnames(test_train2), value = TRUE)
grep("mean" | "std", colnames(test_train2), value = TRUE)
grep("mean | std", colnames(test_train2), value = TRUE)
grep("mean|std", colnames(test_train2), value = TRUE)
test_train3 <- subset(test_train2(grep("mean|std", colnames(test_train2), value = TRUE)))
test_train3 <- subset(grep("mean|std", colnames(test_train2), value = TRUE))
test_train3 <- test_train2[grep("mean|std", colnames(test_train2), value = TRUE)]
dim(c(test_train2, test_train3))
dim(c(test_train2, test_train3))
dim(test_train2)
dim(test_train3)
View(test_train3)
test_train3 <- test_train2[grep("subject|activity|mean|std", colnames(test_train2), value = TRUE)]
dim(test_train3)
View(test_train3)
View(test_train3)
colnames(test_train3[2])
colnames(test_train3)
colnames(test_train3$activity)
levels(test_train3$activity)
levels(test_train3$activity[3])
q()
is.na(test_train3)
test_train3(is.na(test_train3))
sum(is.na(test_train3))
mean(test_train3)
class(test_train3)
sapply(test_train3, mean)
sapply(test_train3, 2, mean)
sapply(test_train3, mean)
sapply(test_train3, class)
lapply(test_train3, class)
sapply(test_train3, class)
sapply(test_train3, mean)
tapply(test_train3,subject, mean)
tapply(test_train3,test_train3$subject, mean)
mean(test_train3)
print(test_train3)
mean(test_train3[3:length(test_train3)])
View(test_train3)
mean(test_train3$`tBodyAcc-mean()-X`)
aggregate(test_train3[, 3:81], list(test_train3$subject), mean)
aggregate(test_train3[, 3:81], list(test_train3$activity), mean)
q()
